% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Map_Functions.R
\name{plot_GCAM}
\alias{plot_GCAM}
\title{Primary GCAM mapping function. Can handle categorical or continuous data.}
\usage{
plot_GCAM(mapdata, col = NULL, proj = robin, proj_type = NULL,
  extent = EXTENT_WORLD, title = "", legend = F, nacolor = gray(0.75),
  gcam_df = NULL, gcam_key = NULL, mapdata_key = NULL, zoom = NULL,
  agr_type = "constant", ...)
}
\arguments{
\item{mapdata}{The data frame containing both geometric data (lat, long, id)
and regional metadata.  This is the only mandatory variable. If used alone,
will produce the default map.}

\item{col}{If plotting categorical/contiuous data, the name of the column to
plot.  Will automatically determine type of style of plot based on type of
data (numeric or character).}

\item{proj}{Map projection to use in the display map.  This should be a proj4
string, except for a few special cases.  There are also symbols defined for
some frequently used projections (e.g. \code{\link{robin}} or
\code{\link{na_aea}}).}

\item{proj_type}{Either esri, epsg, or sr-org as string.  These correspond to
available reference types hosted by http://spatialreference.org/}

\item{extent}{Numeric bounds [xmin, xmax, ymin, ymax] to zoom display to}

\item{title}{Text to be displayed as the plot title}

\item{legend}{Boolean flag: True = display map legend; False = do not display
legend}

\item{nacolor}{Color to use for polygons with no data.  The default is
gray(0.75), which works well for thematic plots.  For plotting gridded data you
probably want something a little more neutral, like gray(0.9).}

\item{gcam_df}{A data frame generated from rgcam getQuery() that contains data
that can be linked to the map geometry data using a unique identifier.}

\item{gcam_key}{The field name containing a join identifier in the gcam_df data frame.}

\item{mapdata_key}{The field name containing a join identifier in the mapdata.}

\item{zoom}{A distance to buffer the bounding box extent by for on-the-fly
adjustments needed when fitting area to maps.}

\item{agr_type}{Aggregate-geometry-relationship type.  Either 'constant' (default),
'aggregate', or 'identity' classified as follows:  [constant] a variable that has a
constant value at every location over a spatial extent; examples: soil type, climate zone, land use.
[aggregate]    values are summary values (aggregates) over the geometry, e.g. population density,
dominant land use.  [identity]    values identify the geometry: they refer to (the whole of)
this and only this geometry.
See https://cran.r-project.org/web/packages/sf/vignettes/sf1.html#how-attributes-relate-to-geometries
for futher explanation.}

\item{...}{Other parameters passed on to \code{colorfcn}.}
}
\description{
This function produces a map visualization of a data set containing
GCAM output data.  The required argument is a data frame of GCAM
results by region.  The functions \code{\link{parse_mi_output}} and
\code{\link{process_batch_q}} produce suitable data frames.
}
\details{
For specifying the projection you can use any Proj4 string.  For convenience,
this package defines the following proj4 strings:
\itemize{
  \item \code{\link{eck3}} - Eckert III
  \item \code{\link{robin}} - Robinson
  \item \code{\link{na_aea}} - Albers equal area (North America)
  \item \code{\link{ch_aea}} - Albers equal area (China)
}

For orthographic projections, we compute the projection using the
\code{\link[ggplot2]{coord_map}} function.  To get this projection
pass the \code{\link{ortho}} symbol as the \code{proj} argument.
You will then need to pass a vector in the \code{orientation}
argument.  We have defined the following fequently used orientation
vectors:
\itemize{
  \item \code{\link{ORIENTATION_AFRICA}} - Africa
  \item \code{\link{ORIENTATION_LA}} - Latin America
  \item \code{\link{ORIENTATION_SPOLE}} - South Pole
  \item \code{\link{ORIENTATION_NPOLE}} - North Pole
}

The \code{extent} argument gives the bounding box of the area to be
plotted.  Its format is \code{c(lon.min, lon.max, lat.min,
lat.max)}.  For convenience we have defined the following
frequently used map extents:
\itemize{
   \item \code{\link{EXTENT_WORLD}} - Entire world
   \item \code{\link{EXTENT_USA}} - Continental United States
   \item \code{\link{EXTENT_CHINA}} - China
   \item \code{\link{EXTENT_AFRICA}} - Africa
   \item \code{\link{EXTENT_LA}} - Latin America
}
}
\examples{
\dontrun{

## Plot a map of GCAM regions; color it with a palette based on RColorBrewer's 'Set3' palette.
  map_32_wo_Taiwan<-rgdal::readOGR(system.file('extdata/rgn32',
                                               'GCAM_32_wo_Taiwan_clean.geojson',
                                               package = 'gcammaptools'))
  map_32_wo_Taiwan.fort<-ggplot2::fortify(map_32_wo_Taiwan, region = 'GCAM_ID')
  mp1<-plot_GCAM(map_32_wo_Taiwan.fort, col = 'id', proj = eck3,
                 colorfcn = qualPalette)

  ## Plot oil consumption by region
  tables<-parse_mi_output(fn = system.file('extdata','sample-batch.csv',
                          package = 'gcammaptools'))
  prim_en<-process_batch_q(tables, 'primary_energy', 'Reference', c(fuel = 'a oil'))
  prim_en<-add_region_ID(prim_en, file.path(basedir.viz,
                                system.file('extdata/rgn32', 'lookup.txt',
                                            package = 'gcammaptools'),
                                system.file('extdata/rgn32',
                                            'drop-regions.txt', package = 'gcammaptools')))
  mp2<-plot_GCAM(map_primen, col = 'X2050', colors = c('white', 'red'),
                 title = 'Robinson World', qtitle = 'Oil Consumption, 2050', legend = T)
}
}
